install.packages('specmine', dependencies=TRUE, repos='http://cran.rstudio.com/')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
install.packages('nmrglue')
library(specmine)
install.packages(c('lattice', 'ggplot2', 'caret', 'BradleyTerry2', 'e1071', 'earth',
'fastICA','gam', 'ipred', 'kernlab', 'klaR', 'MASS', 'ellipse', 'mda',
'mgcv', 'mlbench','MLmetrics', 'nnet', 'party', 'pls', 'pROC', 'proxy',
'randomForest', 'RANN','spls', 'subselect', 'pamr', 'superpc', 'Cubist',
'testthat', 'igraph','Rweka', 'stats', 'scatterplot3d', 'compare',
'hyperSpec', 'ChemoSpec', 'baseline','rgl', 'Metrics', 'GGally',
'ggdendro', 'pcaPP', 'RColorBrewer', 'grid', 'methods', 'qdap',
'shinydashboard', 'shinyBS', 'shinyjs', 'DT', 'RMySQL', 'bcrypt',
'openssl', 'GGally','shinyWidgets', 'colourpicker', 'devtools',
'MLmetrics', 'speaq'))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
source("https://bioconductor.org/biocLite.R")
biocLite()
source("https://bioconductor.org/install")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
install.packages("specmine")
devtools::install_github('cytoscape/r-cytoscape.js')
devtools::install_bitbucket('chrisbcl/metabolomicspackage', ref='master')
devtools::install_github('cytoscape/r-cytoscape.js')
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
install.packages("specmine")
BiocManager::install(c("specmine")
)
BiocManager::install(version = "3.12")
BiocManager::install(version = "3.1")
BiocManager::install(version = "3.2")
packageVersion('specmine')
getNamespaceVersion(pkg)
getNamespaceVersion('specmine')
BiocManager::install('specmine', type='binary')
BiocManager::install(version = "3.1.6")
BiocManager::install(version = "3.16")
devtools::install_github('cytoscape/r-cytoscape.js@v0.0.7')
BiocManager::install('specmine')
install.packages("devtools")
install.packages("devtools")
devtools::install_github("BioSystemsUM/specmine")
BiocManager::install(c("impute", "genefilter", "xcms", "MAIT", "KEGGREST", "KEGGgraph", "mzR")
)
devtools::install_github("BioSystemsUM/specmine")
library(specmine)
maio16 = 'C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Regina Afonso/Maio2016/Afonso_1A_pHidroxi_0003Celulas_1H_25C_13mai2016.fid'
ead_varian_spectra_raw(maio16, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=“,”, samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description=“”, label.x=“ppm”, label.values=“intensity”)
read_varian_spectra_raw(maio16, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=“,”, samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description=“”, label.x=“ppm”, label.values=“intensity”)
read_varian_spectra_raw(maio16)
read_varian_spectra_raw(maio16)
maio16 = 'C:\Users\catia\OneDrive - Universidade do Minho\Ambiente de Trabalho\Regina Afonso\Maio 2016\1A_Branco_Meio_1H_25C_13mai2016.fid'
maio16 = 'C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Regina Afonso\Maio 2016/1A_Branco_Meio_1H_25C_13mai2016.fid'
maio16 = 'C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Regina Afonso/Maio 2016/1A_Branco_Meio_1H_25C_13mai2016.fid'
maio16
read_varian_spectra_raw(maio16)
maio16 = 'C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Regina Afonso/Maio 2016'
maio16
read_varian_spectra_raw(maio16)
maio16 = 'C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Regina Afonso/Maio 2016/1A_Branco_Meio_1H_25C_13mai2016'
maio16
read_varian_spectra_raw(maio16)
library(specmine)
maio16 = 'C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Regina Afonso/Maio 2016/1A_Branco_Meio_1H_25C_13mai2016'
maio16
read_varian_spectra_raw(maio16)
library('nmrglue')
maio16 = 'C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Regina Afonso/Maio 2016/1A_Branco_Meio_1H_25C_13mai2016'
maio16
setwd(maio16)
setwd(maio16)
install.packages('specmine', dependencies=TRUE, repos='http://cran.rstudio.com/')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
install.packages('specmine', dependencies=TRUE, repos='http://cran.rstudio.com/')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
library(nmrglue)
install.packages('nmrglue')
BiocManager::install()
library(nmrglue)
install.packages('nmrglue')
install.packages('specmine', dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages('specmine', dependencies=TRUE, repos='http://cran.rstudio.com/')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
install.packages('nmrglue')
library(specmine)
packageVersion("cli")
install.packages("cli")
install.packages("cli")
library(specmine)
remove.packages("cli")
install.packages("cli", version = "3.4.0")
install.packages("cli", version = "3.4.0")
library(specmine)
install.packages(c('lattice', 'ggplot2', 'caret', 'BradleyTerry2', 'e1071', 'earth',
'fastICA','gam', 'ipred', 'kernlab', 'klaR', 'MASS', 'ellipse', 'mda',
'mgcv', 'mlbench','MLmetrics', 'nnet', 'party', 'pls', 'pROC', 'proxy',
'randomForest', 'RANN','spls', 'subselect', 'pamr', 'superpc', 'Cubist',
'testthat', 'igraph','Rweka', 'stats', 'scatterplot3d', 'compare',
'hyperSpec', 'ChemoSpec', 'baseline','rgl', 'Metrics', 'GGally',
'ggdendro', 'pcaPP', 'RColorBrewer', 'grid', 'methods', 'qdap',
'shinydashboard', 'shinyBS', 'shinyjs', 'DT', 'RMySQL', 'bcrypt',
'openssl', 'GGally','shinyWidgets', 'colourpicker', 'devtools',
'MLmetrics', 'speaq'))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
source("https://bioconductor.org/biocLite.R")
install.packages("BiocManager")
library(BiocManager)
source("https://bioconductor.org/biocLite.R")
biocLite("impute", "genefilter", "xcms", "MAIT", "KEGGREST", "KEGGgraph", "mzR")
BiocManager::install(c("impute", "genefilter", "xcms", "MAIT", "KEGGREST", "KEGGgraph", "mzR"))
library(impute)
library(genefilter)
library(xcms)
library(MAIT)
library(KEGGREST)
library(KEGGgraph)
library(mzR)
devtools::install_github('cytoscape/r-cytoscape.js')
install.packages("specmine")
install.packages("SpecUtils")
SpecUtils
install.packages("SpecUtils")
install.packages("SpecRead")
sessionInfo()
library(Rnmr1D)
library(AlpsNMR)
library(speaq)
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT'
et <- readVarian(dir_et)
install.packages("Rnmr1D")
install.packages("Rnmr1D")
et <- readVarian(dir_et)
library(BiocManager)
library(impute)
library(genefilter)
library(xcms)
library(MAIT)
library(KEGGREST)
library(KEGGgraph)
library(mzR)
devtools::install_github('cytoscape/r-cytoscape.js')
install.packages("specmine")
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
sum_dataset(et_dataset, stats=T)
DT::datatable(et_dataset$data[1:300,], options=list(scrollX=TRUE))
# Detect and align peaks:
et_peaks=detect_nmr_peaks_from_dataset(et_dataset, baseline_tresh = 20000000)
```{r, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
```
```{r echo=FALSE, results="hide", message=FALSE}
library("badger")
install.packages("badger")
```{r, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
```
```{r echo=FALSE, results="hide", message=FALSE}
library("badger")
```
<!-- badges: start -->
```{r, echo = FALSE, results = 'asis'}
cat(
badge_cran_release("specmine", "green")
)
```
<!-- badges: end -->
The goal of *specmine* is to provide a set of methods for metabolomics
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%")
library("badger")
cat(badge_cran_release("specmine", "green"))
devtools::install_github('cytoscape/r-cytoscape.js@v0.0.7')
install.packages("specmine")
packageVersion()
packageVersion(sepcmine)
packageVersion(specmine)
library(impute)
library(genefilter)
library(xcms)
library(MAIT)
library(KEGGREST)
library(KEGGgraph)
library(mzR)
library(BiocManager)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%")
library("badger")
cat(badge_cran_release("specmine", "green"))
devtools::install_github('cytoscape/r-cytoscape.js@v0.0.7')
install.packages("specmine")
install.packages("devtools")
devtools::install_github("BioSystemsUM/specmine")
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
sum_dataset(et_dataset, stats=T)
DT::datatable(et_dataset$data[1:300,], options=list(scrollX=TRUE))
# Detect and align peaks:
et_peaks=detect_nmr_peaks_from_dataset(et_dataset, baseline_tresh = 20000000)
# Table of the data with the peaks detected
DT::datatable(net_peaks$data, options=list(scrollX = TRUE))
install.packages("devtools")
install.packages("specmine")
install.packages("C:/Users/catia/Downloads/specmine_3.1.6.tar.gz", repos = NULL, type = "source")
library(specmine)
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
setwd("C:/Users/catia/ReginaAfonso/ECT")
library(impute)
library(genefilter)
library(xcms)
library(MAIT)
library(KEGGREST)
library(KEGGgraph)
library(mzR)
library(BiocManager)
library("badger")
library(specmine)
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
# Detect and align peaks:
et_peaks=detect_nmr_peaks_from_dataset(et_dataset, baseline_tresh = 20000000)
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
setwd("C:/Users/catia/ReginaAfonso/ECT")
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT/fid'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
install.packages(c('lattice', 'ggplot2', 'caret', 'BradleyTerry2', 'e1071', 'earth',
'fastICA','gam', 'ipred', 'kernlab', 'klaR', 'MASS', 'ellipse', 'mda',
'mgcv', 'mlbench','MLmetrics', 'nnet', 'party', 'pls', 'pROC', 'proxy',
'randomForest', 'RANN','spls', 'subselect', 'pamr', 'superpc', 'Cubist',
'testthat', 'igraph','Rweka', 'stats', 'scatterplot3d', 'compare',
'hyperSpec', 'ChemoSpec', 'baseline','rgl', 'Metrics', 'GGally',
'ggdendro', 'pcaPP', 'RColorBrewer', 'grid', 'methods', 'qdap',
'shinydashboard', 'shinyBS', 'shinyjs', 'DT', 'RMySQL', 'bcrypt',
'openssl', 'GGally','shinyWidgets', 'colourpicker', 'devtools',
'MLmetrics', 'speaq'))
install.packages(c("lattice", "ggplot2", "caret", "BradleyTerry2", "e1071", "earth", "fastICA", "gam", "ipred", "kernlab", "klaR", "MASS", "ellipse", "mda", "mgcv", "mlbench", "MLmetrics", "nnet", "party", "pls", "pROC", "proxy", "randomForest", "RANN", "spls", "subselect", "pamr", "superpc", "Cubist", "testthat", "igraph", "Rweka", "stats", "scatterplot3d", "compare", "hyperSpec", "ChemoSpec", "baseline", "rgl", "Metrics", "GGally", "ggdendro", "pcaPP", "RColorBrewer", "grid", "methods", "qdap", "shinydashboard", "shinyBS", "shinyjs", "DT", "RMySQL", "bcrypt", "openssl", "GGally", "shinyWidgets", "colourpicker", "devtools", "MLmetrics", "speaq"))
BiocManager::install(c("impute", "genefilter", "xcms", "MAIT", "KEGGREST", "KEGGgraph", "mzR"))
install.packages("C:/Users/catia/Downloads/specmine_3.1.6.tar.gz", repos = NULL, type = "source")
packages <- c('impute', 'genefilter', 'xcms', 'MAIT', 'KEGGREST', 'KEGGgraph', 'mzR', 'BiocManager', 'specmine')
library(packages, character.only = TRUE)
for (pkg in packages) {
library(pkg, character.only = TRUE)
}
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT/fid'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
setwd("C:/Users/catia/OneDrive - Universidade do Minho/Ambiente de Trabalho/Projeto de Tese")
setwd("C:/Users/catia/ReginaAfonso")
et_cv <- c("ECT", "ECV")
et_cv_df <- data.frame()
for (folder in et_cv) {
# Read the fid files from the current folder
fid_files <- list.files(path = folder, pattern = ".fid$", full.names = TRUE, recursive = TRUE)
# Loop over each fid file and extract the data
for (fid_file in fid_files) {
data <- read_varian_spectra_raw(fid_file, metadata_file = NULL, m.header_col = TRUE, m.header_row = TRUE, m.sep = ",",
samples.names = NULL, zero_filling = TRUE, apodization = TRUE, zipped = TRUE,
description = "", label.x = "ppm", label.values = "intensity")
# Merge the data with the existing merged data frame
merged_data <- merge(merged_data, data, by = "ppm", all = TRUE)
}
}
merged_data
setwd("C:/Users/catia/ReginaAfonso")
et_cv <- c("ECT", "ECV")
merged_data <- data.frame()  # Initialize an empty data frame
for (folder in et_cv) {
# Read the fid files from the current folder
fid_files <- list.files(path = folder, pattern = ".fid$", full.names = TRUE, recursive = TRUE)
# Loop over each fid file and extract the data
for (fid_file in fid_files) {
data <- read_varian_spectra_raw(fid_file, metadata_file = NULL, m.header_col = TRUE, m.header_row = TRUE, m.sep = ",",
samples.names = NULL, zero_filling = TRUE, apodization = TRUE, zipped = TRUE,
description = "", label.x = "ppm", label.values = "intensity")
# Merge the data with the existing merged data frame
if (nrow(merged_data) == 0) {
merged_data <- data
} else {
merged_data <- merge(merged_data, data, by = "ppm", all = TRUE)
}
}
}
merged_data
dir_et <- 'C:/Users/catia/ReginaAfonso
dir_et <- 'C:/Users/catia/ReginaAfonso
dir_et <- 'C:/Users/catia/ReginaAfonso/ECT/fid'
et_dataset = read_varian_spectra_raw(dir_et, metadata_file=NULL, m.header_col=T, m.header_row=T, m.sep=',', samples.names=NULL, zero_filling=T, apodization=T, zipped=T, description='', label.x='ppm', label.values='intensity')
View(et_cv_df)
